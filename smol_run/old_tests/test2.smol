main
    Int lengthPots = 0;
    Int i = 0;

    AssetModel assetModel = new AssetModel();
    
    print("--------------------------------------------------- Pots from asset model + influx data");
    List<Pot> pots = assetModel.getPots(config);
    lengthPots = pots.length();
    while i < lengthPots do
        Pot pot = pots.get(i);
        print("shelfFloor: ");
        print(pot.shelfFloor);
        print(" groupPosition: ");
        print(pot.groupPosition);
        print(" potPosition: ");
        print(pot.potPosition);
        i = i+1;
    end

    Pot testPot = new Pot(1, "left", "left");

    Int a = 32;
    print(a);
    String b = "this_string_variable_should_be_on_newline";
    print(b);
    print("plain_string");
    print(12);
    print("this_plain_string_should_be_on_newline");

    breakpoint;
end


/**
* Represents a physical Pot. Should be retrieved from the asset model via AssetModel.getPots()
* Each pot is associated with a moisture sensor.
*/
class Pot(Int shelfFloor, String groupPosition, String potPosition)
    models "rdf:type domain:Pot.";
end

/**
* Retrieves data from the asset model and convert it to SMOL objects
*/
class AssetModel()
    // get pot instances from the asset model
    List<Pot> getPots()
        List<Pot> pots = construct("
        PREFIX ast: <http://www.semanticweb.org/gianl/ontologies/2023/1/sirius-greenhouse#>
        SELECT ?shelfFloor ?groupPosition ?potPosition
        WHERE {
            ?pot rdf:type ast:Pot ;
                ast:hasShelfFloor ?shelfFloor ;
                ast:hasGroupPosition ?groupPosition ;
                ast:hasPotPosition ?potPosition .
        }");
        return pots;
    end
end