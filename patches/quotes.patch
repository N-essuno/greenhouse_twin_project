Subject: [PATCH] Adds quotes around string literals even if they are not loaded from a SMOL-literal in the AST
---
Index: src/main/kotlin/no/uio/microobject/ast/expr/ConversionExpr.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/kotlin/no/uio/microobject/ast/expr/ConversionExpr.kt b/src/main/kotlin/no/uio/microobject/ast/expr/ConversionExpr.kt
--- a/src/main/kotlin/no/uio/microobject/ast/expr/ConversionExpr.kt	(revision e6121e728a763996efdc1133ae15855f668e756d)
+++ b/src/main/kotlin/no/uio/microobject/ast/expr/ConversionExpr.kt	(date 1682242584796)
@@ -22,13 +22,13 @@
                 }
             Conversion.DOUBLETOSTRING ->
                 if (i.tag == DOUBLETYPE){
-                    return LiteralExpr(i.literal, STRINGTYPE)
+                    return LiteralExpr("\""+i.literal+"\"", STRINGTYPE)
                 } else {
                     throw Exception("Conversion.DOUBLETOSTRING requires a Double value as its parameter")
                 }
             Conversion.INTTOSTRING ->
                 if (i.tag == INTTYPE){
-                    return LiteralExpr(i.literal, STRINGTYPE)
+                    return LiteralExpr("\""+i.literal+"\"", STRINGTYPE)
                 } else {
                     throw Exception("Conversion.INTTOSTRING requires an Int value as its parameter")
                 }
Index: src/main/kotlin/no/uio/microobject/ast/stmt/ConstructStmt.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/kotlin/no/uio/microobject/ast/stmt/ConstructStmt.kt b/src/main/kotlin/no/uio/microobject/ast/stmt/ConstructStmt.kt
--- a/src/main/kotlin/no/uio/microobject/ast/stmt/ConstructStmt.kt	(revision e6121e728a763996efdc1133ae15855f668e756d)
+++ b/src/main/kotlin/no/uio/microobject/ast/stmt/ConstructStmt.kt	(date 1682242653166)
@@ -59,6 +59,8 @@
                         newObjMemory[f.name] = LiteralExpr(extractedName.split("^^")[0], INTTYPE)
                     else if(extractedName.matches("\\d+".toRegex()) || extractedName.matches("\\d+\\^\\^http://www.w3.org/2001/XMLSchema#integer".toRegex()))
                         newObjMemory[f.name] = LiteralExpr(extractedName.split("^^")[0], INTTYPE)
+                    else if(f.type == STRINGTYPE)
+                        newObjMemory[f.name] = LiteralExpr("\""+extractedName+"\"", f.type)
                     else
                         newObjMemory[f.name] = LiteralExpr(extractedName, f.type)
                 }
